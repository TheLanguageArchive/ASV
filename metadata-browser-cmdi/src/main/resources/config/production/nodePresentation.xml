<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
       profile="cmdi-production,cmdi-production-providers">
    	

    <!-- 
	Spring configuration for node presentations.
	
	    These beans should get picked up by the metadata browser wicket application as long as the 'cmdi-production' profile
	    or 'cmdi-production-providers' is active.
    -->

    <context:annotation-config />

    <bean id="transformerFactory" class="javax.xml.transform.TransformerFactory" factory-method="newInstance" />
    
    <!-- IMDI template definition is read from /imdi-viewer.xsl resource -->
    <bean id="imdiTemplates" factory-bean="transformerFactory" factory-method="newTemplates">
	<qualifier value="imdiTemplates" /> <!-- Qualifier to disambiguate from CMDI templates -->
	<constructor-arg>
	    <bean class="javax.xml.transform.stream.StreamSource">
		<constructor-arg value="classpath:xslt/imdi-viewer.xsl" type="java.io.File"/>
	    </bean>
	</constructor-arg>
    </bean>
    
    <!-- IMDI template definition is read from /cmd2xhtml.xsl resource -->
    <bean id="cmdiTemplates" factory-bean="transformerFactory" factory-method="newTemplates">
	<qualifier value="cmdiTemplates" /> <!-- Qualifier to disambiguate from IMDI templates -->
	<constructor-arg>
	    <bean class="javax.xml.transform.stream.StreamSource">
		<constructor-arg value="classpath:xslt/cmdi2xhtml.xsl" type="java.io.File"/>
	    </bean>
	</constructor-arg>
    </bean>
    
    <bean id="nodePresentationProvider" class="nl.mpi.metadatabrowser.services.cmdi.impl.CMDINodePresentationProvider" />
</beans>
