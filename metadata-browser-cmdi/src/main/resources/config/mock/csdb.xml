<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd"
       profile="cmdi-mock-csdb"
>
    <!-- 
	Spring configuration of a MOCK corpus structure database implementation for usage in a TESTING environment.
    -->
    
    <!-- Mock CSDB  -->
    <bean id="csdb" class="nl.mpi.metadatabrowser.services.cmdi.mock.MockCmdiCorpusStructureDB">
	<property name="rootNode" ref="rootNode" />
    </bean>
    
    <!-- Mock factory just returning the CSDB -->
    <bean id="csdbFactory" class="nl.mpi.metadatabrowser.services.cmdi.mock.MockCmdiCorpusStructureDatabaseFactory">
	<constructor-arg ref="csdb" />
    </bean>
    
    <bean id="rootNode" class="nl.mpi.metadatabrowser.services.cmdi.mock.MockCorpusNode">
	<property name="nodeId" value="node:0" />
	<property name="name" value="Root" />
	<property name="profileId" value="collection" />
	<property name="children">
	    <list>
		<ref bean="child1" />
		<ref bean="child2" />
	    </list>
	</property>
    </bean>
    
    <bean id="child1" class="nl.mpi.metadatabrowser.services.cmdi.mock.MockCorpusNode">
	<property name="nodeId" value="node:01" />
	<property name="name" value="Child 1" />
	<property name="profileId" value="profile100" />
	<property name="parent" ref="rootNode" />
	<property name="children">
	    <list>
		<ref bean="resource1" />
		<ref bean="resource2" />
	    </list>
	</property>
    </bean>
    
    <bean id="child2" class="nl.mpi.metadatabrowser.services.cmdi.mock.MockCorpusNode">
	<property name="nodeId" value="node:02" />
	<property name="name" value="Child 2" />
	<property name="profileId" value="profile101" />
	<property name="parent" ref="rootNode" />
    </bean>
    
    <bean id="resource1" class="nl.mpi.metadatabrowser.services.cmdi.mock.MockCorpusNode">
	<property name="nodeId" value="node:021" />
	<property name="name" value="Video resource" />
	<property name="corpusNodeType" value="RESOURCE_VIDEO" />
	<property name="parent" ref="child1" />
	<!-- resource -->
    </bean>
    
    <bean id="resource2" class="nl.mpi.metadatabrowser.services.cmdi.mock.MockCorpusNode">
	<property name="nodeId" value="node:022" />
	<property name="name" value="Audio resource" />
	<property name="corpusNodeType" value="RESOURCE_AUDIO" />
	<property name="parent" ref="child1" />
	<!-- resource -->
    </bean>
    
    <bean id="nodeResolver" class="nl.mpi.metadatabrowser.services.cmdi.mock.MockNodeResolver">
	<!-- Node URI -> resource mappings -->
	<constructor-arg>
	    <map>
		<entry key="node:01" value="/mock-data/collection-cgn.cmdi" />
		<entry key="node:021" value="/mock-data/talkbank.imdi" />
		<entry key="node:022" value="/mock-data/collection-talkbank.cmdi" />
	    </map>
	</constructor-arg>
	<constructor-arg>
	    <!-- Base resolver -->
	    <bean class="nl.mpi.archiving.tree.corpusstructure.CorpusStructureDBNodeResolver" />
	</constructor-arg>
    </bean>
</beans>
