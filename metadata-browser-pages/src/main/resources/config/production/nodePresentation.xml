<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
       profile="hybrid-production,hybrid-production-providers">
    	

    <!-- 
	Spring configuration for node presentations.
	
            These beans should get picked up by the metadata browser wicket application as long as the 'hybrid-production' profile
            or 'hybrid-production-providers' is active.
    -->

    <context:annotation-config />
    
    <!-- Load properties from context.xml via servlet container -->
    <bean class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true" />
    </bean>
    
    <bean id="templatesFactory" class="nl.mpi.metadatabrowser.services.cmdi.impl.ResourceTemplateFactory" />
    
    <!-- IMDI template definition is read from /imdi-viewer.xsl resource -->
    <bean id="imdiTemplates" factory-bean="templatesFactory" factory-method="newTemplate">
        <qualifier value="imdiTemplates" /> <!-- Qualifier to disambiguate from CMDI templates -->
        <constructor-arg value="${nl.mpi.metadatabrowser.stylesheet.imdi2html:/xslt/imdi-viewer.xsl}" />
    </bean>
    
    <!-- IMDI template definition is read from /cmd2xhtml.xsl resource -->
    <bean id="cmdiTemplates" factory-bean="templatesFactory" factory-method="newTemplate">
        <qualifier value="cmdiTemplates" /> <!-- Qualifier to disambiguate from IMDI templates -->
        <constructor-arg value="${nl.mpi.metadatabrowser.stylesheet.cmdi2html:/xslt/cmdi2xhtml.xsl}" />
    </bean>
    
    <!-- Put both templates beans in the templates store -->
    <bean id="templatesStore" class="nl.mpi.metadatabrowser.services.TemplatesStore">
        <constructor-arg>
            <map>
                <entry key="IMDI" value-ref="imdiTemplates"/>
                <entry key="CMDI" value-ref="cmdiTemplates"/>
            </map>
        </constructor-arg>
    </bean>
    
    <bean id="nodePresentationProvider" class="nl.mpi.metadatabrowser.services.cmdi.impl.CMDINodePresentationProvider" />
    
    <bean id="nodePresentationAjaxListener" class="nl.mpi.metadatabrowser.services.cmdi.impl.CMDINodePresentationAjaxListener" /> 
</beans>
